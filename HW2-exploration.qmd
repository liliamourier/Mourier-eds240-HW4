---
title: "EDS240 HW2 Part 2"
subtitle: "Data Wrangling & Exploratory Data Analysis For HW4"
author: "Lilia Mourier"
date: "2025-02-05"
format:
  html:
    embed-resources: true
editor: visual
---

# 2b.

## Import, clean, and wrangle data

```{r}
#| eval: true
#| echo: true
#| message: false
#| warning: false

#.........................Load Libraries.........................

library(tidyverse)
library(janitor)
library(here)
library(dplyr)

#............................Load Data...........................

# Load Coastal Commission coastal public access data
coastal_access <- read_csv(here("data", "Public_Access_Points.csv")) 

# Load CalEnviroScreen 4.0 environmental burden data
enviro_burden <- read_csv(here("data", "calenviroscreen4.csv"))
demographics <- read_csv(here("data", "calenviroscreen4_demographic.csv"))

# Define coastal counties
coastal_counties <- c("Del Norte", "Sonoma", "Humboldt", "Mendocino", "Marin",
                      "San Francisco", "San Mateo", "Santa Cruz", "Monterey", 
                      "San Luis Obispo", "Santa Barbara", "Ventura", "Los Angeles", 
                      "Orange", "San Diego", "Napa", "Solano", "Contra Costa", 
                      "Alameda", "Santa Clara")

#...Prepare demographic data for join with coastal access data...

# Filter demographic data to only coastal counties
demographics <- demographics |> 
  clean_names() |> 
  filter(california_county %in% coastal_counties)

demo_summary <- demographics |>
  
  # Convert column names to lower_snake_case 
  clean_names() |>
  
  # Pivot data longer
  pivot_longer(
    cols = children_10_years_percent:other_multiple_percent,
    names_to = "demographic_variable",
    values_to = "demographic_percent"
  ) |>
  
  # Create new column with the total population of each demographic variable
  mutate(
    demographic_total = ((demographic_percent / 100)*total_population)
  ) |>
  
  # Group by county and demographic variable
  group_by(california_county, demographic_variable) |>
  
  # Calculate the total population of each demographic in each county
  summarise(
    total_demographic_population = sum(demographic_total, na.rm = TRUE),
    .groups = "drop" # Ungroup after summarizing
  ) 

# Summarize other county-level statistics
county_summary <- demographics |>
  
  # Convert column names to lower_snake_case 
  clean_names() |>
  
  # Group by county
  group_by(california_county) |>
  
  summarise(
    
    # Calculate the average ces score and percentile for each county
    avg_ces_4_0_score = mean(ces_4_0_score, na.rm = TRUE),
    avg_ces_4_0_percentile = mean(ces_4_0_percentile, na.rm = TRUE),
    
    # Calculate the total population per county
    total_population = sum(total_population, na.rm = TRUE),
    .groups = "drop" # Ungroup after summarizing
  ) 

# Join the two summarized datasets 
county_demo <- left_join(county_summary, demo_summary, by = "california_county") |>
  
  # Rename column containing county name
  rename(county = california_county)


#...Prepare coastal access data for join with demographic data...

# Create df for use when mapping access information 
coastal_access_locations <- coastal_access |>
  
  # Convert column names to lower_snake_case
  clean_names() |>
  
  select(
    county,
    in_mobile_we,
    feature_typ,
    access_type,
    o_public,
    fee,
    parking,
    dsabldacss,
    restrooms,
    vistor_ctr,
    dog_friend,
    lifeguard,
    drinkwtr,
    pcnc_area,
    firepits,
    pier,
    sndy_beach,
    dunes,
    rky_shore,
    upland_bch,
    strm_crdor,
    wetland,
    bluff,
    bay_lgn_lk,
    urbn_wfrnt,
    strs_beach,
    pth_beach,
    boardwlk,
    blftp_trls,
    blftp_prk,
    trail_or_p,
    bike_path,
    equest_trl,
    swimming,
    tidepool,
    surfing,
    fishing,
    boating,
    latitude,
    longitude
  )

# Create a df that summarizes access information per county 
coastal_access_summary <- coastal_access |>
  
  # Convert column names to lower_snake_case
  clean_names() |>
  
  # Exclude latitude and longitude
  select(-latitude, -longitude) |>
  
  # Group by county
  group_by(county) |>
  
  summarise(
    
    # Count total coastal access sites per county
    total_sites = n(),
    
    # # Count occurrences of each feature type
    # feature_types = paste(unique(feature_typ), collapse = ", "),
    # access_types = paste(unique(access_type), collapse = ", "),

    # Count basic access amenities
    public_access = sum(o_public == "Yes", na.rm = TRUE),
    fee_required = sum(fee == "Yes", na.rm = TRUE),
    parking_available = sum(parking == "Yes", na.rm = TRUE),
    disabled_accessible = sum(dsabldacss == "Yes", na.rm = TRUE),
    wheelchair_accessible = sum(in_mobile_we == "Yes", na.rm = TRUE),
    restrooms_available = sum(restrooms == "Yes", na.rm = TRUE),
    visitor_centers = sum(vistor_ctr == "Yes", na.rm = TRUE),
    dog_friendly = sum(dog_friend == "Yes", na.rm = TRUE),
    lifeguard_present = sum(lifeguard == "Yes", na.rm = TRUE),
    drinking_water = sum(drinkwtr == "Yes", na.rm = TRUE),
    
    # Count environment types 
    sandy_beach = sum(sndy_beach == "Yes", na.rm = TRUE),
    dunes_present = sum(dunes == "Yes", na.rm = TRUE),
    rocky_shore = sum(rky_shore == "Yes", na.rm = TRUE),
    upland_beach = sum(upland_bch == "Yes", na.rm = TRUE),
    stream_corridor = sum(strm_crdor == "Yes", na.rm = TRUE),
    wetland_present = sum(wetland == "Yes", na.rm = TRUE),
    bluff_present = sum(bluff == "Yes", na.rm = TRUE),
    bay_lagoon_lake = sum(bay_lgn_lk == "Yes", na.rm = TRUE),
    urban_waterfront = sum(urbn_wfrnt == "Yes", na.rm = TRUE),
    
    # Count recreational amenities
    picnic_area = sum(pcnc_area == "Yes", na.rm = TRUE),
    firepits_available = sum(firepits == "Yes", na.rm = TRUE),
    pier_available = sum(pier == "Yes", na.rm = TRUE),
    stairs_to_beach = sum(strs_beach == "Yes", na.rm = TRUE),
    path_to_beach = sum(pth_beach == "Yes", na.rm = TRUE),
    boardwalk_present = sum(boardwlk == "Yes", na.rm = TRUE),
    blufftop_trails = sum(blftp_trls == "Yes", na.rm = TRUE),
    blufftop_parks = sum(blftp_prk == "Yes", na.rm = TRUE),
    trails_present = sum(trail_or_p == "Yes", na.rm = TRUE),
    bike_paths = sum(bike_path == "Yes", na.rm = TRUE),
    equestrian_trails = sum(equest_trl == "Yes", na.rm = TRUE),
    
    # Count water-related recreational opportunities
    swimming_allowed = sum(swimming == "Yes", na.rm = TRUE),
    tidepools_present = sum(tidepool == "Yes", na.rm = TRUE),
    surfing_allowed = sum(surfing == "Yes", na.rm = TRUE),
    fishing_allowed = sum(fishing == "Yes", na.rm = TRUE),
    boating_allowed = sum(boating == "Yes", na.rm = TRUE),
    
    .groups = "drop" # Ungroup after summarizing
  )

#...........Create a combined county-level data frame ...........

# Join the county-level coastal access and demographic/environmental burden data
access_demo_burden <- left_join(county_demo, coastal_access_summary, by = "county")

```

## Explore data visualization options

```{r}
#| eval: true
#| echo: true
#| message: false
#| warning: false

#.........................Load libraries.........................
library(ggplot2)
library(ggridges)
library(sf)
library(tigris)

#............Explore ces score distributions by county...........

ggplot(demographics, aes(x = ces_4_0_score, y = california_county, fill = stat(x))) +
  geom_density_ridges_gradient(scale = 3, rel_min_height = 0.01) +
  scale_fill_viridis_c(option = 'mako') +  # Apply a gradient color scale
  theme_ridges() +  # Use ridgeline theme
  labs(
    title = "Distribution of CES 4.0 Scores by County",
    x = "Score",
    y = NULL
  ) +
  theme(
    legend.position = "none", 
    axis.title.x = element_text(hjust = .5)
  )

```

```{r, results='hide'}
#| eval: true
#| echo: true
#| message: false
#| warning: false

# Load the California county shapefile
options(tigris_progress = FALSE)
ca_counties_sf <- counties(state = "CA", cb = TRUE)

#..........Explore a map of ces scores and access points.........

# Create a coastal California county shapefile with ces data
coastal_counties_sf <- ca_counties_sf |>
  filter(NAME %in% coastal_counties) |> 
  left_join(county_demo, by = c("NAME" = "county"))

# Initialize ggplot
ggplot() +
  
  # Plot all California counties as background layer
  geom_sf(data = ca_counties_sf, fill = "lightgray", color = "white", size = 0.1) +
  
  # Plot coastal counties with CES 4.0 score fill on top
  geom_sf(data = coastal_counties_sf, aes(fill = avg_ces_4_0_score)) +
  
  # Add color scale for CES 4.0 scores
  scale_fill_viridis_c(option = "mako") +
  
  #Add the latitude/longitude of access points
  geom_point(data = coastal_access_locations, 
             aes(x = longitude, y = latitude), 
             color = "orange",
             size = .5) +
  
  # Adjust labels 
  labs(
    title = "Average CES 4.0 Scores by County",
    fill = "Score"
  ) +
  
  # Additional theme and labels
  theme_void() +
  
  # Further adjust theme
  theme(
    legend.position = "right"
  )

#................Explore coastal access amenities................

# Create df of the percent of access points with basic amenities 
basic_amenities_data <- access_demo_burden |>
  
  # Select basic amenities columns
  select(
    total_sites,
    fee_required,
    parking_available,
    restrooms_available,
    disabled_accessible
    ) |>
  
  drop_na() |> 
  
  # Sum access points and amenities 
  summarise(
    total_sites = sum(total_sites),
    fee_required = sum(fee_required),
    parking_available = sum(parking_available),
    restrooms_available = sum(restrooms_available),
    disabled_accessible = sum(disabled_accessible),
  ) |> 
  
  # Pivot data to calculate proportions and to plot 
  pivot_longer(
    cols = fee_required:disabled_accessible, # Select columns to pivot
    names_to = "basic_amenity",
    values_to = "count"
  ) |>
  
  # Calculate proportions of access points with amenities 
  mutate(prct = (count / total_sites)*100) |>
  
  # Order amenties by proportions
  mutate(basic_amenity = fct_reorder(basic_amenity, prct))
  
    
# Plot the percent of access points with basic amenities 
ggplot(basic_amenities_data, aes(x = prct, y = basic_amenity, fill = basic_amenity)) +
  geom_bar(stat = "identity", width = 0.5) +
  scale_fill_viridis_d(option = "mako") +
  labs(title = "Percentage Acces Point With Basic Amenities") +
  theme_minimal()+
  theme(legend.position = "none")

# Create df of the percent of access points with various environmental features  
env_features_data <- access_demo_burden |>
  
  # Select environmental features columns
  select(
    total_sites,
    sandy_beach,
    dunes_present,
    rocky_shore,
    upland_beach,
    stream_corridor,
    wetland_present,
    bluff_present,
    bay_lagoon_lake,
    urban_waterfront,
    ) |>
  
  drop_na() |> 
  
  # Sum access points and environmental features
  summarise(
    total_sites = sum(total_sites),
    sandy_beach = sum(sandy_beach),
    dunes_present = sum(dunes_present),
    rocky_shore = sum(rocky_shore),
    upland_beach = sum(upland_beach),
    stream_corridor = sum(stream_corridor),
    wetland_present = sum(wetland_present),
    bluff_present = sum(bluff_present),
    bay_lagoon_lake = sum(bay_lagoon_lake),
    urban_waterfront = sum(urban_waterfront),
  ) |> 
  
  # Pivot data to calculate proportions and to plot 
  pivot_longer(
    cols = sandy_beach:urban_waterfront, # Select columns to pivot
    names_to = "basic_amenity",
    values_to = "count"
  ) |>
  
  # Calculate proportions of access points with each environmental feature 
  mutate(prct = (count / total_sites)*100) |>
  
  # Order amenties by proportions
  mutate(basic_amenity = fct_reorder(basic_amenity, prct))
  
# Plot percent of access points with various environmental features
ggplot(env_features_data, aes(x = prct, y = basic_amenity, fill = basic_amenity)) +
  geom_bar(stat = "identity", width = 0.5) +
  scale_fill_viridis_d(option = "mako") +
  labs(title = "Environmental Features of Coastal Access Points") +
  theme_minimal() +
  theme(legend.position = "none")

```

# 2c.

**1. What have you learned about your data? Have any potentially interesting patterns emerged?**

From the basic plots I have created so far, I have learned:

-   The distributions of CalEnviroScore scores by coastal county in California are quite right skewed, meaning scores for coastal zip codes and counties are centered around fairly low values.

-   The majority of access points have parking spaces and restrooms, but less than half are accessible to people with physical disabilities

-   More than a quarter of all public access sites require a fee

-   The most common environmental features at access points are sandy beaches, upland beaches, and bluffs, while the least common environmental features are wetlands, urban waterfronts, and dunes

No interesting patterns have emerged yet, mainly due to the fact that CalEnviroScore scores along the coast are quite low. Some interesting patterns may emerge once I figure out how to plot the demographic data with/against the coastal access amenities data. Given the lack of diversity in the distributions of CalEviroScreen scores along the coast, I'm worried my data is a bit bland and won't present many interesting patterns. I think if I pull in some context about beach and coastal access resiliency in the face of climate change (i.e. sea level rise and increases wave run up/flooding from storms) these more basic takeaways will be more meaningful, though this would take the project in a somewhat different direction.

**2. In HW #1, you outlined some questions that you wanted to answer using these data. Have you made any strides towards answering those questions? If yes, how so? If no, what next steps do you need to take (e.g. I need to create X plot type, I still need to track down Y data, I need to restructure existing data so that you can visualize it in Z ways, etc.)?**

My questions are:

-   What coastal counties are most and least diverse or have the greatest or smallest B.I.P.O.C. populations?

-   What coastal counties have the greatest or least number of coastal access points?

-   How does the quantity and quality of coastal access points vary between counties with the most or least racially diverse populations? or the highest or lowest housing burden, poverty rate, unemployment rate, or education?

The visualizations I have created so far don't necessarily answer these questions. I created them to explore and understand my data better ahead of creating graphics that truly answer my questions. I made a lot of progress on my data wrangling, but still need to calculate stats on what counties have the least or greatest diversity, coastal access points, and specific access points features/amenities. Because I already wrangled the data to the county-level, calculating those stats shouldn't be too tricky. I can then plot that information in several ways — coastal county map, bar graph, and/or scatter plot.

**3. What challenges do you foresee encountering with your data? These can be data wrangling and / or visualization challenges.**

A few challenges come to mind:

-   The CalEnviroScreen pollution burden and demographic data get interesting at the zip-code-level resolution. Unfortunately I only have coastal access information at county-level resolution. This forced me to average or total pollution burden and demographic data for each county, which certainly cost me some interesting nuance. I'm not exactly sure how to get around this issue and I worry that at the county-level resolution not many interesting demographic patterns will emerge.

-   As much as I want to use this project to answer my questions, I'm equally motivated to use the project to create some cool/unique graphics. Part of why I picked the coastal access data set is that it was so large and had so much information on amenities that I thought could be fun to plot, but I'm having trouble thinking of cool ways to do so — especially with the demographics resolution issue I'm facing. I'm hoping that the infographic lecture this Friday inspires me. Though the amenity/feature data is basic, there could be more fun ways to symbolize the information.
