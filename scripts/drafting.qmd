---
title: "HW3-drafting-viz"
author: "Lilia Mourier"
format:
  html:
    embed-resources: true
editor: visual
---

Libraries:

```{r, results='hide'}
#| message: false
#| warning: false
#| echo: true
#| eval: true

##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
##                               load libraries                             ----
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

library(tidyverse)
library(here)
library(janitor)
library(ggtext)
library(sf)
library(tigris)
library(glue)
library(stringr)
library(waffle)
```

Data processing:

```{r, results='hide'}
#| message: false
#| warning: false
#| echo: true
#| eval: true


##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
##                          load & wrangle data                       ----
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

#....................define coastal cities and counties.....................

coastal_counties <- c("Del Norte", "Sonoma", "Humboldt", "Mendocino", "Marin",
                      "San Francisco", "San Mateo", "Santa Cruz", "Monterey", 
                      "San Luis Obispo", "Santa Barbara", "Ventura", "Los Angeles", 
                      "Orange", "San Diego")

#....................load coastal armoring data...................

# load coastal armoring csv data
coastal_structures <- read_csv(here("data", "structures_2024.csv")) |>
  clean_names()

# load coastal armoring shapefile data
coastal_structures_sf <- read_sf(here("data","structures_2024_sf", 
                                      "StructureLocations_2_15_24.shp"))

# summarize coastal armoring structures per county 
total_county_structures <- coastal_structures |>
  group_by(county) |>
  summarise(
    total_structures = n(),
    .groups = "drop" 
  ) 

#....................load coastal armoring timeseries data...................

# load coastal armoring timeseries data 
counties_timeseries<- read_csv(here("data", "armoring_timeseries.csv"))|>
  filter(!coastline %in% c("Southern California", "California"))
  
california_timeseries<- read_csv(here("data", "armoring_timeseries.csv"))|>
  filter(coastline =="California")
  
#..............sum total length of armored coastline.............
armored_coastline <- coastal_structures |>
  clean_names() |>
  select(length_calculation) |> 
  summarise(
    armored_length = sum(length_calculation)
  ) |>
  mutate(unarmored_length = 4435200 - armored_length) |>
  pivot_longer(
    cols = everything(),
    names_to = "coastline_type",
    values_to = "length_ft"
  ) |>
  mutate(proportion = length_ft/4435200)

#.................wrangle development type data .................

# select and clean development data
structure_development <- coastal_structures |> 
  select(development_type) |> 
  mutate(development_type = tolower(development_type)) |>
  mutate(development_type = case_when(
    development_type %in% c("public, local", "public, state", "public, federal", "private, commercial") ~ development_type,
    development_type %in% c("privates, residential", "private, residential") 
    ~ "private, residential", 
    TRUE ~ NA_character_)) |> 
  separate(development_type, into = c("ownership_type", "sub_category"), sep = ", ", extra = "merge", fill = "right")

# count development types
development_count <- structure_development |> 
  drop_na() |> 
  count(ownership_type, sub_category) |> 
  arrange(n) |> 
  mutate(sub_category = fct_reorder(sub_category, n))

#.................wrangle structure type data .................

# select structure type
structure_type <- coastal_structures |> 
  select(structure_type) |>
  mutate(structure_type = case_when(
    structure_type %in% c("Seawall", "Revetment", "Retaining Wall", 
                          "Sand Wall", "Surface Armor", "Bulkhead",
                          "Infill") ~ structure_type,
    TRUE ~ "Other"))

# count structure types
structure_count <- structure_type |> 
  drop_na() |> 
  count(structure_type) |> 
  arrange(n) |> 
  mutate(structure_type = fct_reorder(structure_type, n)) |>
  mutate(prct = (n/sum(n))*100)
  
#.................wrangle backshore type data .................

# select and clean backshore type
backshore_type <- coastal_structures |> 
  select(backshore_type) |> 
  mutate(backshore_type = case_when(
    backshore_type %in% c("Beach", "Cliff/Bluff", "Inlet") ~ backshore_type,
    backshore_type %in% c("Bluff") 
    ~ "Cliff/Bluff", 
    TRUE ~ "Other"))
  
# count backshore type
backshore_count <- backshore_type |> 
  drop_na() |> 
  count(backshore_type) |> 
  arrange(n) |> 
  mutate(backshore_type = fct_reorder(backshore_type, n))

#.......load state and county boundaries and merge with summary data.......

# define california boundaries
california_sf <- states(cb = TRUE, class = "sf") |>
  filter(STUSPS == "CA")

# filter for coastal counties only
coastal_counties_sf <- counties(state = "CA", cb = TRUE, class = "sf")|> 
  mutate(county = sub(" County", "", NAME)) |> 
  filter(county %in% coastal_counties)

# Merge with coastal county data
county_structures_sf <- coastal_counties_sf |> 
  right_join(total_county_structures, by = "county")


```

Aesthetics:

```{r}
#| message: false
#| warning: false
#| echo: true
#| eval: true

##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
##                          Define Graphic Aesthetics                       ----
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

# define colors 
deep_olive <- "#1e1d18"
dark_olive <- "#4e540f"
medium_olive <- "#666d20"
light_olive <- "#8b9147"
deep_ice <- "#080d12"
darker_ice <- "#1d2a3a"  
dark_ice <- "#3b4a5f"
medium_dark_ice <- "#5c81a9"
medium_ice <- "#7992a6"
light_ice <- "#C0D0CE"

# define a custom theme function
theme_dark_ice_olive <- function() {
  theme_minimal() + 
  
  theme(
    
    # customize text
    text = element_text(size = 10, color = "white"),
    axis.text.x = element_text(size = 8, color = "white"), 
    axis.text.y = element_text(size = 8, color = "white"), 
    
    # customize grid lines and background
    panel.grid.major = element_blank(),  
    panel.grid.minor = element_blank(),  
    
    # axis line and tick marks color customization
    axis.line = element_line(color = "white", size = 0.25),  
    axis.ticks = element_line(color = "white", size = 0.25),
    
    # customize plot title
    plot.title = element_text(size = 12, face = "bold", 
                              color = "white"),
    
    # customize plot and panel background
    plot.background = element_rect(fill = deep_olive, color = deep_olive),
    panel.background = element_rect(fill = deep_olive, color = deep_olive),  
    
  )
}


```

Development type waffle chart:

```{r}
#| message: false
#| warning: false
#| echo: true
#| eval: true

# Aggregate counts for public vs. private structures
ownership_waffle <- development_count |> 
  group_by(ownership_type) |> 
  summarise(n = sum(n)) 

# Define colors for public vs. private
ownership_waffle_colors <- c("private" = light_olive, "public" = medium_ice)


ownership_waffle_chart <- ggplot(ownership_waffle, 
       aes(fill = ownership_type, values = n)) +
  geom_waffle(color = "#1e1d18", #color of outline of waffle cubes,
              size = 1.25,#thickness of outline of waffle cubes
              n_rows = 10,
              make_proportional = TRUE) +
  coord_fixed() + #makes all waffle cubes square
  scale_fill_manual(values = ownership_waffle_colors) +
  theme_dark_ice_olive() +
  theme(
    plot.background = element_rect(fill = deep_olive, color = deep_olive),
    panel.background = element_rect(fill = deep_olive, color = deep_olive),
    legend.position = "bottom",
    legend.title = element_blank(),
    axis.text.x = element_blank(),
    axis.text.y = element_blank(),
    axis.line.x = element_blank(),
    axis.line.y = element_blank(),
    axis.ticks.x = element_blank(),
    axis.ticks.y = element_blank(),
    panel.grid = element_blank()
  )

ownership_waffle_chart

# Save the plot as a PDF file
ggsave("ownership_waffle_chart.png", plot = ownership_waffle_chart, width = 5, height = 5, dpi=300)

```

Backshore environment waffle chart:

```{r}
#| message: false
#| warning: false
#| echo: true
#| eval: true


# Define colors for backshore types (choose distinct colors for each category)
backshore_colors <- c(
  "Beach" = medium_olive,     
  "Cliff/Bluff" = dark_ice,  
  "Inlet" = medium_ice,     
  "Other" = light_ice
)

backshore_waffle_chart <- ggplot(backshore_count, 
       aes(fill = backshore_type, values = n)) +
  geom_waffle(color = "#1e1d18", #color of outline of waffle cubes,
              size = 1.25,#thickness of outline of waffle cubes
              n_rows = 10,
              make_proportional = TRUE) +
  coord_fixed() + #makes all waffle cubes square
  scale_fill_manual(values = backshore_colors) +
  theme_dark_ice_olive() +
  theme(
    plot.background = element_rect(fill = deep_olive, color = deep_olive),
    panel.background = element_rect(fill = deep_olive, color = deep_olive),
    legend.position = "bottom",
    legend.title = element_blank(),
    axis.text.x = element_blank(),
    axis.text.y = element_blank(),
    axis.line.x = element_blank(),
    axis.line.y = element_blank(),
    axis.ticks.x = element_blank(),
    axis.ticks.y = element_blank(),
    panel.grid = element_blank()
  )

backshore_waffle_chart

# Save the plot as a PDF file
ggsave("backshore_waffle_chart.png", plot = backshore_waffle_chart, width = 5, height = 5, dpi=300)
```

Armoring categories

```{r, out.width="100%", out.height="100%", fig.align="center"}
#| message: false
#| warning: false
#| echo: true
#| eval: true

##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
##                Create a bar chart of structure type                      ----
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

# bar chart
structure_bar_plot <- ggplot(structure_count, aes(x = structure_type, y = prct)) +
  geom_col(fill = light_olive) +
  geom_text(aes(
      label = paste0(round(prct, 1), "%")),
      color = "white",
      size = 3,
      vjust = 0.5,
      hjust = -0.2) +
  labs(title = "Hard Armoring Along California’s Coast", 
       subtitle = str_wrap("Over 85% of armoring structures are seawalls, revetments, or retaining walls", width = 30),
       x = NULL,
       y = NULL
       ) +
  scale_y_continuous(expand = expansion(mult = c(0.01, 0.15)))+
  scale_x_discrete(expand = expansion(mult = c(0.1, 0.0))) +
  coord_flip() +
  theme_dark_ice_olive() +
  theme(
    legend.position = "blank",
    axis.ticks.x = element_blank(),
    axis.text.x = element_blank(),
    axis.line.x = element_blank(),
    axis.ticks.y = element_blank(),
    axis.text.y = element_text(size = 8),
    axis.line.y = element_blank(),
    plot.subtitle = ggtext::element_markdown(margin = margin(t = 5, b = 10)),
    plot.title = element_text(margin = margin(t = 15, b = 0)),
    plot.margin = margin(0, 30, 10, 10))

# Save the plot as a PDF file
ggsave("structure_bar_chart.pdf", plot = structure_bar_plot, width = 7.5, height = 5)
```

County map

```{r, fig.width = 12, fig.height = 6, out.width="100%", out.height="100%", fig.align="center"}
#| message: false
#| warning: false
#| echo: true
#| eval: true

##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
##                      Create County Cloropleth Map                        ----
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

# cloropleth map 
county_map <- ggplot() +
  geom_sf(data = california_sf, fill = deep_olive, color = "white") +
  geom_sf(data = county_structures_sf, aes(fill = total_structures), color = "white") +
  scale_fill_gradientn(
    name = "Number of Structures",
    colors = rev(c(deep_ice, darker_ice, dark_ice, medium_dark_ice, medium_ice, light_ice)),
    limits = c(0, 1050)) +
  geom_point(data = coastal_structures, aes(x = longitude, y = latitude), color = "#d36135",
             size = .25) +
  labs(
    title = "Shoreline Armoring Across Coastal Counties",
    subtitle = str_wrap("Southern counties have significantly more structures than other coastal regions in the State", width = 50)
  ) +
  theme_dark_ice_olive() +
  theme(
    legend.position = c(.20, 0.1),
    legend.title.position = "top",
    legend.title = element_text(size = 8),
    legend.direction = "horizontal",
    axis.line = element_blank(),
    axis.ticks = element_blank(),
    axis.text.x = element_blank(),
    axis.text.y = element_blank(),
    axis.title = element_blank(),
    panel.background = element_rect(fill = deep_olive, color = NA),
    plot.background = element_rect(fill = deep_olive, color = NA),
    plot.margin = margin(0, 50, 0, 25)
  ) +
  coord_sf(clip = "off")

# Save the plot as a PDF file
ggsave("county_heat_map.pdf", plot = county_map, width = 5, height = 6)

```

```{r, fig.width = 7.5, fig.height = 2.5,}

# create line plot with faceting for califoria and all other counties
california_timeseries_plot <- ggplot(california_timeseries, aes(x = year, y = armored_shoreline_miles)) +
  geom_line(size = 1, color = light_olive) + 
  geom_point(size = 1, color = light_olive) + 
  scale_x_continuous(breaks = c(1971, 1998, 2018)) +
  labs(x = NULL, 
       y = "Miles of Armored Shoreline") +
  theme_dark_ice_olive()
california_timeseries_plot

ggsave("california_timeseries_plot.pdf", plot = california_timeseries_plot, width = 6, height = 4)

```

```{r, fig.width = 7.5, fig.height = 2.5,}

# define a color mapping for coastlines
coastline_colors <- c(
  "Ventura" = medium_ice, 
  "Los Angeles" = medium_ice,
  "Orange" = medium_ice,
  "San Diego" = medium_ice,
  "Santa Barbara" = medium_ice
)

# define line widths based on coastline (for example, making California thicker)
coastline_linewidths <- c(
  "Ventura" = .75, 
  "Los Angeles" = .75,
  "Orange" = .75,
  "San Diego" = .75,
  "Santa Barbara" = .75
)

# assign default color to coastlines not listed
counties_timeseries$coastline_color <- 
  ifelse(counties_timeseries$coastline %in% names(coastline_colors),
         coastline_colors[counties_timeseries$coastline],dark_ice)

counties_timeseries$line_width <- 
  ifelse(counties_timeseries$coastline %in% names(coastline_linewidths),
         coastline_linewidths[counties_timeseries$coastline], .25)

# create line plot with faceting for califoria and all other counties
counties_timeseries_plot <- ggplot(counties_timeseries, aes(x = year, y = armored_shoreline_miles, group = coastline, color = coastline_color, size = line_width)) +
  geom_line() + 
  geom_point(size = 1) +
  scale_color_identity() +
  scale_size_identity() + 
  scale_x_continuous(breaks = c(1971, 1998, 2018)) +
  scale_y_continuous(breaks = c(0, 10, 20, 30), limits = c(0, 30)) +
  labs(x = NULL, 
       y = "Miles of Armored Shoreline") +
  theme_dark_ice_olive()

# Save the plot as a PDF file
ggsave("counties_timeseries_plot.pdf", plot = counties_timeseries_plot, width = 6, height = 4)
```
